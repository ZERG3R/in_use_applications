import os
import wx
import uuid
import re
import logging
import datetime
import sys
import socket

"""
Need:
    Name of User
    Full Computer Name
    Password (get user input for this)
    Serialnumbers
    MAC (physical) address
    IPv4 and IPv6 Address
    PC Model
    Windows activation product ID
    If it has adobe (and sign in name if possible)
    List of Users (from C:/Users)
"""

"""
Additions: 
    Create a way to check if the PC is in the file (using serialnumbers)
    Automatically push to cdc inventory
"""

year = datetime.datetime.now().year

ipconfig_file = '\Inventory\ipconfig.txt'
TV_file = '\Inventory\teamviewer.txt'
online_directory = '\\\\cdc\\CDC\\IT\\Inventory\\' + str(year)
main_file_online = '\\\\cdc\\CDC\\IT\\Inventory\\' + str(year) + '\\Inventory.txt'
main_file_offline = '\\Inventory\\Inventory.txt'
error_log_online = '\\\\cdc\\CDC\\IT\\Inventory\\' + str(year) + '\\error_file.log'
error_log_offline = '\Inventory\error_file.log'


def on_internet(host='8.8.8.8', port=53, timeout=3):
    try:
        socket.setdefaulttimeout(timeout)
        socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect((host, port))
        return True
    except Exception as ex:
        print(ex)
        return False


# get the serialnumber line, then reverse from that line until it finds "Users name of this machine is:"
def look_up_machine(location):
    serialnum = os.popen('wmic bios get serialnumber').read()
    regex_value = []
    try:
        regex_num = re.search(r".*([0-9])\w+", serialnum).group(0) # this only works with numbers
        regex_value.append(regex_num)
    except AttributeError:
        pass
    try:
        regex_word = re.search(r"(?<=\n).*([A-Z])\w+", serialnum).group(0)
        regex_value.append(regex_word)
    except AttributeError:
        pass

    our_list = []  # create an empty list that will be appended to
    with open(location, 'r') as mf:  # open the file
        for index, line in enumerate(mf):  # for each line in the file, associate it with a number called index
            our_list.append(line.rstrip())  # appending each line from file to our_list
            new_regex_value = regex_value[0].strip()  # stripping the regex value we got from serialnum
            if str(new_regex_value) in our_list:  # if the stripped value is in our list
                for i in our_list[index::-1]:  # dont know whats happening here downwards
                    if 'Users name of this machine is:' in i:  # Until it reaches this line, then print and break
                        print(index)
                        print('This serialnumber is already in our list, the old user is:' +
                              re.search(r"(?<=:).*([a-zA-Z])\w+", i).group(0))
                        break  # this break is not working as intended


def error_logging(location):
    logging.basicConfig(filename=location, filemode='a', level=logging.DEBUG)
    curr_time = str(datetime.datetime.today())
    logging.info(curr_time)
    sys.stderr = open(location, 'a')


def askname(parent=None, message='', value=''):
    namedlg = wx.TextEntryDialog(parent, message, value=value)
    namedlg.ShowModal()
    name = namedlg.GetValue()
    namedlg.Destroy()
    return name



def askpassword(parent=None, message='', value=''):
    passworddlg = wx.PasswordEntryDialog(parent, message)
    passworddlg.ShowModal()
    password = passworddlg.GetValue()
    passworddlg.Destroy()
    return password


def write_name_and_pass(location):
    with open(location, 'a') as f:
        pc_name = os.popen('hostname').read().rstrip()
        f.write('Name of this machine is: ' + pc_name + '\n')
        f.write('Password to this machine is: ' + askpassword() + '\n')
        f.write('Users name of this machine is ' + askname() + '\n')


def run_ui():
    app = wx.App()
    app.MainLoop()
    name = askname(message='What is your name? ')
    password = askpassword(message='What is your password? ')


def collect_info(location):
    with open(location, 'a') as fm:

        serialnum = os.popen('wmic bios get serialnumber').read().rstrip()
        serialnum = serialnum.rstrip()
        fm.write(str(serialnum).rstrip() + '\n')

        unformatted_mac = hex(uuid.getnode()).replace('0x', '')
        mac = ':'.join(unformatted_mac[i : i + 2] for i in range(0, 11, 2))
        mac = mac.rstrip()
        fm.write('MAC address for this machine is: ' + mac + '\n')

        os.system('ipconfig>' + ipconfig_file)
        with open(ipconfig_file, 'r') as f:
            for line in f.readlines():
                line = line.strip()
                if line.startswith('IPv4'):
                    ipv4 = line.rstrip()
                    fm.write(ipv4 + '\n')
                elif 'IPv6' in line:
                    ipv6 = line.rstrip()
                    fm.write(ipv6 + '\n')

        pcmodel = os.popen('wmic csproduct get name').read().rstrip()
        pcmodel = pcmodel.rstrip()
        regexd_pcmodel = re.search(r"(?!Name).*([A-Z])\w+", pcmodel).group(0).strip()
        fm.write('PC Model of this machine is: ' + str(regexd_pcmodel).rstrip() + '\n')


def teamviewer(location):  # teamviewer get username
    try:
        hex1 = os.popen('reg query HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\TeamViewer /v ClientID').read()
        hex_code = re.search(r"(?<=0)[^\]]([0-9])\w+", hex1).group(0)
        hex_code = str('0' + hex_code)
        convert = int(hex_code, 16)

        with open(location, 'a') as mf:
            mf.write('Teamviewer ID: ' + str(convert))
    except:
        pass


def add_end_line(location):
    with open(location, 'a') as mf:
        mf.write('\n+ ------------------------------------------------------------------------------------ + \n')


def handle_files():
    sys.stderr.close()
    logging.shutdown()


def main():
    if on_internet():
        if not os.path.isdir(online_directory):
            os.mkdir(online_directory)
        if not os.path.exists(main_file_online):
            with open(main_file_online, 'a') as mf:
                mf.write('+ ------------------------------------------------------------------------------------ + \n')

            error_logging(error_log_online)
            run_ui()
            write_name_and_pass(main_file_online)
            collect_info(main_file_online)
            teamviewer(main_file_online)
            add_end_line(main_file_online)
            handle_files()

        else:
            error_logging(error_log_online)
            run_ui()
            write_name_and_pass(main_file_online)
            collect_info(main_file_online)
            teamviewer(main_file_online)
            add_end_line(main_file_online)
            handle_files()

    elif not on_internet():
        if not os.path.isdir('\\Inventory'):
            os.mkdir('\\Inventory')
        if not os.path.exists(main_file_offline):
            with open(main_file_offline, 'a') as mf:
                mf.write('+ ------------------------------------------------------------------------------------ + \n')

                error_logging(error_log_offline)
                run_ui()
                write_name_and_pass(main_file_offline)
                collect_info(main_file_offline)
                teamviewer(main_file_offline)
                add_end_line(main_file_offline)
                handle_files()
        
        else:
            error_logging(error_log_offline)
            run_ui()
            write_name_and_pass(main_file_offline)
            collect_info(main_file_offline)
            teamviewer(main_file_offline)
            add_end_line(main_file_offline)
            handle_files()

main()
